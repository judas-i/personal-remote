Domain Layer

 Choose one architecture type.

 1. Spring Framework 3.x + EclipseLink 2.x.
 
 2. EJB 3.x + EclipseLink 2.x.
  
 3. Spring Framework 3.x + Non JPA Query.

* 1. Spring Framework 3.x + EclipseLink 2.x

 This is the most productive architecture of the three.

** Download modules
 
 Adds dependencies to your project's pom.xml and execute mvn.
 
+---------------------------------------
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>sql-engine</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>	
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>sql-client-api</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>	
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>sql-client-impl</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>	
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>sql-client-eclink-impl</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>	
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>alpha-platform-api</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>	
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>alpha-spring-impl</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>		
	
	and each project's dependencies.
	
+---------------------------------------

** Configuration

 Adds default behavior of Alpha Framework to your applicationContext.xml

+---------------------------------------
	
<context:annotation-config/>
<aop:aspectj-autoproxy/>
<tx:annotation-driven/>	

<import resource="classpath:META-INF/defaultServiceContext.xml"/>
<import resource="classpath:META-INF/defaultJpaQueryContext.xml"/>
<import resource="classpath:META-INF/defaultQueryAdviceContext.xml"/>
<import resource="classpath:META-INF/defaultAdviceContext.xml"/>

<!- sample of DB setting -->
<bean id="transactionManager"
	 class="org.springframework.transaction.jta.JtaTransactionManager"/>	
<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

	<!-- name of persistenceUnit at persistence.xml -->
	<property name="persistenceUnitName" value="XXX">

	<!-- weaver setting ex:glassfish  -->
	<property name="loadTimeWeaver">
		<bean class="org.springframework.instrument.classloading.glassfish.GlassFishLoadTimeWeaver"/>
	</property>

	<property name="jpaDialect">
		<bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect"/>
	</property>
</bean>
<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

+---------------------------------------

* 2. EJB 3.x + EclipseLink 2.x

  Standard architecture in business application.

** Download modules
 
 Adds dependencies to your project's pom.xml and execute mvn.
 
+---------------------------------------
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>sql-engine</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>	
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>sql-client-api</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>	
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>sql-client-impl</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>	
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>sql-client-eclink-impl</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>	
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>alpha-platform-api</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>	
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>alpha-ejb-impl</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>		
	
	and each project's dependencies.
	
+---------------------------------------

** Configuration

 Define sub class of AbtractServiceInterceptor in ejb-jar.xml

+---------------------------------------
<interceptors>
<interceptor>
	<interceptor-class>
  		service.framework.core.transaction.autonomous.ContextControllableTransactionInterceptor
  	</interceptor-class
</interceptor>	  		
</interceptors>
  	
<assembly-descriptor>
<interceptor-binding>
	<ejb-name>*ServiceImpl</ejb-name>
	<interceptor-order>
	<interceptor-class>
		service.framework.core.transaction.autonomous.ContextControllableTransactionInterceptor
	</interceptor-class>
	</interceptor-order> 
</interceptor-binding>
</assembly-descriptor>
+---------------------------------------

** Restriction

 Annotation 'TransactionAttribute(TransactionAttributeType.REQUIRES_NEW) is required at class or method in autonomous transactional service.
 

* 3. Spring Framework 3.x + Non JPA Query

 This is the most flexible architecture of the three.

** Download modules
 
 Adds dependencies to your project's pom.xml and execute mvn.
 
+---------------------------------------
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>sql-engine</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>	
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>sql-client-api</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>	
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>sql-client-impl</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>		
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>alpha-platform-api</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>	
	<dependency>
		<groupId>alpha</groupId>
	    <artifactId>alpha-spring-impl</artifactId>
	    <version>1.1.0-SNAPSHOT</version>
	</dependency>		
	
	and each project's dependencies.
	
+---------------------------------------

** Configuration

 Adds default behavior of Alpha Framework to your applicationContext.xml

+---------------------------------------
	
<context:annotation-config/>
<aop:aspectj-autoproxy/>
<tx:annotation-driven/>	

<import resource="classpath:META-INF/defaultServiceContext.xml"/>
<import resource="classpath:META-INF/defaultSqlQueryContext.xml"/>
<import resource="classpath:META-INF/defaultQueryAdviceContext.xml"/>
<import resource="classpath:META-INF/defaultAdviceContext.xml"/>

<!- sample of DB setting -->
<jee:jndi-lookup id="dataSource" jndi-name="jdbc/_jtaDataSource" />
<bean id="transactionManager"
	class="org.springframework.transaction.jta.JtaTransactionManager"/>	
	
<!-- EntityManager settiong -->
<bean id="txEntityManager" class="service.core.TxEntityManagerImpl" scope="prototype">
		<property name="dataSource" ref="dataSource"/>
		<property name="internalQuery" ref="internalNativeQuery"/>				
</bean>
+---------------------------------------