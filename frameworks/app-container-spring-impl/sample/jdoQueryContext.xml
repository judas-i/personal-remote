<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<context:annotation-config/>
	
	<!-- 
		this context is exclusive to any other context.
	 -->
	 
	 <!-- リクエストリスナー-->
	<bean id="requestListener" class="framework.service.ext.listener.RequestListenerImpl" scope="prototype" />
	
	<!-- メッセージ作成-->
	<bean id="messageBuilder" class="framework.logics.builder.impl.MessageBuilderImpl"/>
	<bean id="messageAccessor" class="framework.service.core.error.impl.MessageAccessorImpl">
		<property name="messageBuilder" ref="messageBuilder"/>
	</bean>

	<!-- メッセージングサービス-->
	<bean id="messagingServiceFactory" class="framework.service.core.messaging.impl.MessagingClientFactoryImpl" />
	 
	 
	<!-- JDO設定 -->
	<bean id="persistenceManagerFactory" class="org.springframework.orm.jdo.LocalPersistenceManagerFactoryBean">
		<property name="persistenceManagerFactoryName" value="transactions-optional" />
	</bean>

  	<bean id="persistenceManagerFactoryProxy" class="org.springframework.orm.jdo.TransactionAwarePersistenceManagerFactoryProxy">
		<property name="targetPersistenceManagerFactory" ref="persistenceManagerFactory" />
		<property name="allowCreate" value="false" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.jdo.JdoTransactionManager">
		<property name="persistenceManagerFactory" ref="persistenceManagerFactoryProxy" />
	</bean>

	<!-- トランザクションアドバイス、このようにするとtx:annotaiton-driven指定してしまうとadviceが二つになって怪しい動作になるためtx:annotaiton-driven禁止 -->
	<bean id="transactionAttributeSource" class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
	<bean id="txAdvice" class="framework.service.ext.advice.ContextControllableTransactionIntercepter" >
		<property name="transactionAttributeSource" ref="transactionAttributeSource"/>	
	</bean>
	<bean class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
		<property name="transactionInterceptor" ref="txAdvice"/>
	</bean>	

	<!--**************************************************	
	サービス 
	**************************************************-->	
	<!-- 例外処理 -->
	<bean id="emptyHandler" class="framework.service.core.query.CustomEmptyHandlerImpl" scope="prototype" />
	<bean id="multiResultHandler" class="framework.service.core.query.CustomMultiResultHandlerImpl" scope="prototype" />

	<!-- クエリファクトリ:ORマッピング用 -->
	<bean id="persistenceManagerProvider" class="framework.jdoclient.internal.PersistenceManagerProviderImpl" scope="singleton">
		<property name="persistenceManagerFactory" ref="persistenceManagerFactory" />
	</bean>
	
	<!-- クエリファクトリ:ORマッピング用 -->
	<bean id="internalJdoQueryFactory" class="framework.jdoclient.api.orm.OrmQueryFactoryImpl" scope="prototype">
		<property name="persistenceManagerProvider" ref="persistenceManagerProvider" />
		<property name="emptyHandler" ref="emptyHandler"/>	
		<property name="multiResultHandler" ref="multiResultHandler"/>	
	</bean>

	<!-- クエリファクトリ:ORマッピング用開発者API -->
	<bean id="jdoOrmQueryFactory" class="framework.service.core.query.AdvancedOrmQueryFactoryImpl" scope="prototype">
		<property name="messageAccessor" ref="messageAccessor" />		
		<property name="internalFactory" ref="internalJdoQueryFactory" />
	</bean>
	
	<!-- クエリのアサーション -->
	<bean id="serviceQueryAssertion" class="framework.logics.assertion.impl.QueryAssertionImpl">
		<property name="messageAccessor" ref="messageAccessor"/>
	</bean>

</beans>
